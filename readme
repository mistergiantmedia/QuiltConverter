# Looking Glass Quilt Video Converter

Convert Looking Glass quilt videos to native display format without needing the Bridge SDK. This tool takes quilt videos (like `video_qs5x9a1.87.mp4`) and your Looking Glass calibration file (`visual.json`) to create videos that can be displayed directly on your Looking Glass display.

## What This Tool Does

- **Input**: Quilt video file + visual.json calibration file
- **Output**: Native Looking Glass video ready for direct display
- **Purpose**: Display quilt videos without requiring the Looking Glass Bridge

## Quick Start (For Non-Technical Users)

### Windows Users
1. Download all files to a folder
2. Double-click `setup_and_run.bat`
3. Follow the GUI prompts

### Manual Setup
1. Install Python (from python.org)
2. Install required packages: `pip install opencv-python numpy tqdm`
3. Run: `python quilt_converter_gui.py`

## Getting Your Files

### 1. Get Your Quilt Video
Your quilt video should have a filename like:
- `MyVideo_qs5x9a1.87.mp4` (5 columns, 9 rows, aspect ratio 1.87)
- `Content_qs8x6a0.75.mp4` (8 columns, 6 rows, aspect ratio 0.75)

The filename tells the converter how the quilt is structured.

### 2. Get Your visual.json File
This file contains your Looking Glass display's calibration data:

**Location on your computer:**
- Navigate to your Looking Glass device folder
- Look for: `LKG-XXXXXX/LKG_calibration/visual.json`
- Or use Looking Glass Bridge to export calibration

**Alternative methods:**
- Use Looking Glass Bridge software to export calibration
- Visit https://eka.hn/calibration_test.html with your Looking Glass connected
- Use the Looking Glass SDK tools to extract calibration

## Usage

### GUI Version (Recommended for beginners)
```bash
python quilt_converter_gui.py
```

1. Click "Browse" to select your quilt video file
2. Click "Browse" to select your visual.json calibration file
3. Choose where to save the output (auto-generated by default)
4. Click "Convert Video"
5. Wait for conversion to complete

### Command Line Version
```bash
python quilt_converter.py input_video.mp4 visual.json [output.mp4]
```

**Examples:**
```bash
# Basic usage
python quilt_converter.py MyVideo_qs5x9a1.87.mp4 visual.json

# With custom output filename
python quilt_converter.py MyVideo_qs5x9a1.87.mp4 visual.json MyVideo_Native.mp4
```

## File Formats

### Supported Input Formats
- **Video**: MP4, MOV, AVI, MKV
- **Calibration**: JSON format (visual.json)

### Output Format
- **Video**: MP4 in your Looking Glass native resolution (e.g., 2560x1600)

## Quilt Naming Convention

The converter automatically reads quilt parameters from your filename:

| Format | Meaning | Example Use Case |
|--------|---------|------------------|
| `qs5x9a1.87` | 5 cols, 9 rows, aspect 1.87 | Looking Glass 16" & 32" |
| `qs8x6a0.75` | 8 cols, 6 rows, aspect 0.75 | Looking Glass Portrait |

If the filename doesn't match this pattern, default values (5x9, aspect 1.87) are used.

## Common Looking Glass Display Settings

| Device | Recommended Quilt | Resolution | Aspect Ratio |
|--------|-------------------|------------|--------------|
| Portrait | 8x6 (qs8x6a0.75) | 3360x3360 | 0.75 (4:3) |
| 16" | 5x9 (qs5x9a1.87) | 4096x4096 | 1.777 (16:9) |
| 32" | 5x9 (qs5x9a1.87) | 8192x8192 | 1.777 (16:9) |

## Troubleshooting

### "Could not parse quilt parameters"
- Make sure your filename includes the quilt format (e.g., `_qs5x9a1.87`)
- The converter will use default values but may not display correctly

### "Error loading calibration file"
- Verify your visual.json file is valid JSON
- Check that it contains required fields: screenW, screenH, center, pitch, slope

### "Video conversion failed"
- Ensure input video file is not corrupted
- Check available disk space for output
- Try a different output location

### Poor Quality Output
- Verify your quilt parameters match your original content
- Ensure visual.json is for the correct Looking Glass device
- Check that input video resolution matches expected quilt size

## Technical Details

### How It Works
1. **Parse Quilt**: Extracts the grid layout from filename
2. **Load Calibration**: Reads your Looking Glass display parameters
3. **Frame Processing**: For each video frame:
   - Splits quilt into individual view tiles
   - Applies lenticular transformation using calibration data
   - Maps pixels to native display format
4. **Output**: Saves as MP4 video in native resolution

### Performance
- Processing time depends on video length and resolution
- 8K quilts take significantly longer than 4K quilts
- Typical processing speed: 1-5 FPS depending on hardware

## Requirements

### Software
- Python 3.6+
- OpenCV (`pip install opencv-python`)
- NumPy (`pip install numpy`)
- tqdm (for progress bar)
- tkinter (for GUI, usually included with Python)

### Hardware
- Sufficient RAM for video processing (8GB+ recommended)
- Storage space for output video (roughly same size as input)

## Limitations

- Only processes standard quilt formats
- Requires valid visual.json calibration file
- Processing is done on CPU (no GPU acceleration currently)
- Output is always in MP4 format

## Getting Help

### File Issues
- Ensure your quilt video plays normally in video players
- Verify visual.json opens as valid JSON in a text editor
- Check file paths don't contain special characters

### Display Issues
- Test output video in standard video player first
- Verify calibration file matches your exact Looking Glass device
- Try different quilt parameters if display looks incorrect

## Advanced Usage

### Custom Quilt Parameters
If filename parsing fails, you can modify the code to set custom parameters:
```python
# In parse_quilt_filename method, change defaults:
return 8, 6, 0.75  # For Portrait
return 5, 9, 1.87  # For 16"/32"
```

### Batch Processing
For multiple videos, create a script that calls the converter in a loop:
```bash
for file in *.mp4; do
    python quilt_converter.py "$file" visual.json
done
```

## License

This tool is provided as-is for educational and personal use. Not affiliated with Looking Glass Factory.

## Contributing

Feel free to improve this tool:
- Add support for more video formats
- Implement GPU acceleration
- Add batch processing GUI
- Improve error handling